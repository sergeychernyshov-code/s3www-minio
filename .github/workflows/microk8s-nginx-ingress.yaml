name: MicroK8s with NGINX Ingress + ngrok

on:
  push:
    branches: [main]

jobs:
  microk8s-ingress:
    runs-on: ubuntu-24.04 

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: A job to install MicroK8s
      uses: balchua/microk8s-actions@v0.4.3
      with:
        channel: '1.26/stable'
        addons: '["dns", "ingress", "rbac", "hostpath-storage", "registry"]'
    - name: Test MicroK8s
      id: myactions
      run: |
        kubectl get no
        kubectl get pods -A -o wide

    - name: Check User
      run: |
        id
        sudo --user "$USER" --preserve-env --preserve-env=PATH -- env -- microk8s status
    
    - name: Deploy demo app and service
      run: |
        cat <<EOF | sudo --user "$USER" --preserve-env --preserve-env=PATH -- env -- microk8s kubectl apply -f -
        apiVersion: v1
        kind: Service
        metadata:
          name: demo-service
        spec:
          selector:
            app: demo
          ports:
            - protocol: TCP
              port: 80
              targetPort: 8080
        ---
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: demo
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: demo
          template:
            metadata:
              labels:
                app: demo
            spec:
              containers:
              - name: demo
                image: hashicorp/http-echo
                args:
                - "-text=Hello from MicroK8s!"
                ports:
                - containerPort: 8080
        EOF

    - name: Create Ingress Resource
      run: |
        cat <<EOF | sudo --user "$USER" --preserve-env --preserve-env=PATH -- env -- microk8s kubectl apply -f -
        apiVersion: networking.k8s.io/v1
        kind: Ingress
        metadata:
          name: demo-ingress
          annotations:
            nginx.ingress.kubernetes.io/rewrite-target: /
        spec:
          rules:
          - http:
              paths:
              - path: /
                pathType: Prefix
                backend:
                  service:
                    name: demo-service
                    port:
                      number: 80
        EOF

    - name: Install ngrok
      run: |
        curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null
        echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list
        sudo apt update && sudo apt install ngrok

    - name: Start ngrok tunnel (HTTP on port 80)
      env:
        NGROK_AUTHTOKEN: ${{ secrets.NGROK_AUTHTOKEN }}
      run: |
        ngrok config add-authtoken $NGROK_AUTHTOKEN
        nohup ngrok http 80 > ngrok.log &
        sleep 10
        curl http://127.0.0.1:4040/api/tunnels | jq -r '.tunnels[0].public_url'

    - name: Output tunnel URL
      run: |
        curl -s http://127.0.0.1:4040/api/tunnels | jq -r '.tunnels[0].public_url'

    - name: Sleep for 90 seconds to allow testing
      run: sleep 90
